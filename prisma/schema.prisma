generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model announcements {
  id                  BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  title               String?               @db.VarChar(255)
  body                String?               @db.MediumText
  created_at          DateTime?             @db.Timestamp(0)
  updated_at          DateTime?             @db.Timestamp(0)
  user_id             Int?
  deleted_at          DateTime?             @db.Timestamp(0)
  announcements_files announcements_files[]
}

model announcements_files {
  id              BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  announcement_id BigInt        @db.UnsignedBigInt
  file            String?       @db.VarChar(255)
  created_at      DateTime?     @db.Timestamp(0)
  updated_at      DateTime?     @db.Timestamp(0)
  deleted_at      DateTime?     @db.Timestamp(0)
  announcements   announcements @relation(fields: [announcement_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "announcements_files_announcement_id_foreign")

  @@index([announcement_id], map: "announcements_files_announcement_id_foreign")
}

model cdl_events {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String
  start       DateTime  @db.DateTime(0)
  end         DateTime  @db.DateTime(0)
  color       String    @db.VarChar(7)
  description String?   @db.LongText
  user_id     Int
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
}

model cdl_fast_events {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String
  start      DateTime  @db.Time(0)
  end        DateTime  @db.Time(0)
  color      String    @db.VarChar(7)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model employee_status_reports {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  body        String    @db.VarChar(8000)
  user_id     Int
  requestDate DateTime? @db.Timestamp(0)
}

model events {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  start       DateTime  @db.DateTime(0)
  end         DateTime  @db.DateTime(0)
  color       String    @db.VarChar(7)
  description String?   @db.LongText
  user_id     Int?
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model fast_events {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  start      DateTime  @db.Time(0)
  end        DateTime  @db.Time(0)
  color      String    @db.VarChar(7)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model jobs {
  id           BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  queue        String
  payload      String @db.LongText
  attempts     Int    @db.UnsignedTinyInt
  reserved_at  Int?   @db.UnsignedInt
  available_at Int    @db.UnsignedInt
  created_at   Int    @db.UnsignedInt

  @@index([queue], map: "jobs_queue_index")
}

model learning_posts {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  body        String    @db.MediumText
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  user_id     Int
  cover_image String    @db.VarChar(255)
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model number_of_employees {
  id                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at                DateTime? @db.Timestamp(0)
  updated_at                DateTime? @db.Timestamp(0)
  totalCount                Int       @db.MediumInt
  executivesCount           Int       @db.MediumInt
  officeManagementCount     Int       @db.MediumInt
  humanResourcesCount       Int       @db.MediumInt
  accountingCount           Int       @db.MediumInt
  financialPlanningCount    Int       @db.MediumInt
  learningCount             Int       @db.MediumInt
  complianceQCCount         Int       @db.MediumInt
  legalCount                Int       @db.MediumInt
  capitalMarketsCount       Int       @db.MediumInt
  technologyCount           Int       @db.MediumInt
  disclosuresCount          Int       @db.MediumInt
  transactionManagersCount  Int       @db.MediumInt
  loanSetUpCount            Int       @db.MediumInt
  underwritingCount         Int       @db.MediumInt
  valuationSpecialistsCount Int       @db.MediumInt
  fundersCount              Int       @db.MediumInt
  investorReportingCount    Int       @db.MediumInt
  lossMitigationCount       Int       @db.MediumInt
  customerServiceCount      Int       @db.MediumInt
  taxCount                  Int       @db.MediumInt
  servicingQACount          Int       @db.MediumInt
  shippingCount             Int       @db.MediumInt
  marketingCount            Int       @db.MediumInt
  aeWestCount               Int       @db.MediumInt
  aeEastCount               Int       @db.MediumInt
  retailCount               Int       @db.MediumInt
  correspondentCount        Int       @db.MediumInt
  loanServicingCount        Int       @db.MediumInt
}

model oauth_access_tokens {
  id         String    @id @db.VarChar(100)
  user_id    BigInt?   @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  name       String?
  scopes     String?   @db.Text
  revoked    Boolean
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  expires_at DateTime? @db.DateTime(0)

  @@index([user_id], map: "oauth_access_tokens_user_id_index")
}

model oauth_auth_codes {
  id         String    @id @db.VarChar(100)
  user_id    BigInt    @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  scopes     String?   @db.Text
  revoked    Boolean
  expires_at DateTime? @db.DateTime(0)

  @@index([user_id], map: "oauth_auth_codes_user_id_index")
}

model oauth_clients {
  id                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                BigInt?   @db.UnsignedBigInt
  name                   String
  secret                 String?   @db.VarChar(100)
  provider               String?
  redirect               String    @db.Text
  personal_access_client Boolean
  password_client        Boolean
  revoked                Boolean
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)

  @@index([user_id], map: "oauth_clients_user_id_index")
}

model oauth_personal_access_clients {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  client_id  BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model oauth_refresh_tokens {
  id              String    @id @db.VarChar(100)
  access_token_id String    @db.VarChar(100)
  revoked         Boolean
  expires_at      DateTime? @db.DateTime(0)

  @@index([access_token_id], map: "oauth_refresh_tokens_access_token_id_index")
}

model password_resets {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
}

model posts {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  filename    String    @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  category_id String    @db.VarChar(255)
  filesize    Float     @db.Float
}

model reminders {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  body       String
  user_id    Int
}

model role_user {
  id         Int    @id @default(autoincrement())
  role_id    Int       @db.UnsignedInt
  user_id    Int       @db.UnsignedInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model roles {
  id         Int    @id @default(autoincrement())
  name       String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model s2zar_jsn_users {
  id                Int       @id @default(autoincrement())
  privacy           String    @db.MediumText
  firstname         String    @db.VarChar(255)
  secondname        String    @db.VarChar(255)
  lastname          String    @db.VarChar(255)
  avatar            String    @db.VarChar(255)
  params            String    @db.MediumText
  facebook_id       String    @db.VarChar(200)
  twitter_id        String    @db.VarChar(255)
  google_id         String    @db.VarChar(255)
  linkedin_id       String    @db.VarChar(255)
  territory         String?   @db.VarChar(255)
  extension         String?   @db.VarChar(255)
  fax               String?   @db.VarChar(255)
  cell              String?   @db.VarChar(255)
  position          String?   @db.VarChar(255)
  team              String?   @db.VarChar(255)
  direct_phone      String?   @db.VarChar(255)
  directphone       String?   @db.VarChar(255)
  teamregion        String?   @db.VarChar(255)
  pod_id            String?   @db.VarChar(255)
  pod_lead          Boolean?
  pod_tm_lead       Boolean?
  pod_tm_lead_name  String?   @db.VarChar(255)
  pod_uw_lead       Boolean?
  pod_uw_lead_name  String    @db.VarChar(255)
  division          String?   @db.VarChar(255)
  departments       String?   @db.VarChar(255)
  manager           String?   @db.VarChar(255)
  manager_icon      String?   @db.VarChar(255)
  manager_cellphone String?   @db.VarChar(100)
  team_region       String?   @db.VarChar(255)
  team_name         String?   @db.VarChar(255)
  deleted_at        DateTime? @db.Timestamp(0)
}

model s2zar_users {
  id             Int       @id @default(autoincrement())
  employeeID     Int
  name           String    @default("") @db.VarChar(400)
  username       String    @default("") @db.VarChar(150)
  email          String    @default("") @db.VarChar(100)
  password       String    @default("") @db.VarChar(100)
  avatar         String    @db.VarChar(255)
  updated_at     DateTime? @db.Timestamp(0)
  remember_token String?   @db.VarChar(100)
  block          Int       @default(0) @db.TinyInt
  sendEmail      Int?      @default(0) @db.TinyInt
  created_at     DateTime? @db.Timestamp(0)
  startDate      DateTime? @db.Timestamp(0)
  lastvisitDate  DateTime? @db.DateTime(0)
  activation     String    @default("") @db.VarChar(100)
  params         String    @db.MediumText
  lastResetTime  DateTime? @db.DateTime(0)
  resetCount     Int       @default(0)
  otpKey         String    @default("") @db.VarChar(1000)
  otep           String    @default("") @db.VarChar(1000)
  requireReset   Int       @default(0) @db.TinyInt
  folderID       String?   @db.VarChar(255)
  active         Boolean?
  deleted_at     DateTime? @db.Timestamp(0)

  @@index([email], map: "email")
  @@index([block], map: "idx_block")
  @@index([name(length: 100)], map: "idx_name")
  @@index([username], map: "username")
}

model sections {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  turn_time_id Int?
  title        String?
  body         String?
  comments     String?   @db.LongText
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model sub_sections {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  section_id Int?
  title      String?
  body       String?
  comments   String?   @db.LongText
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model turn_times {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  user_id    Int
}

model useful_links {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  title      String?   @db.VarChar(255)
  url        String?   @db.VarChar(255)
  category   String?   @db.VarChar(255)
  user_id    Int?
}

model users {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model wholesale_events {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String
  start       DateTime  @db.DateTime(0)
  end         DateTime  @db.DateTime(0)
  color       String    @db.VarChar(7)
  description String?   @db.LongText
  user_id     Int
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
}

model wholesale_fast_events {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String
  start      DateTime  @db.Time(0)
  end        DateTime  @db.Time(0)
  color      String    @db.VarChar(7)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}
